datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

////////////////////////////////////
// ----------- ENUMS ------------ //
////////////////////////////////////


enum UserRole {
  SUPER
  ADMIN
  USER
}

enum ModelStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  DELETED
}



/////////////////////////////////////
// -------- AUTH MODELS ---------- //
/////////////////////////////////////
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

// Optional for WebAuthn support
model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

////////////////////////////////////
// -------- PRIMARY MODELS ------ //
////////////////////////////////////

/**
 * Models are linked when creating content via a relationship table. Eg:
 * await prisma.modelLink.create({
 * data: {
 * sourceId: caseId,
 * sourceType: 'CASE',
 * targetId: hospital1Id,
 * targetType: 'LOCATION',
 * description: 'Initial admission - Emergency Room'
 * }
 * });
 */

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?

  // Auth
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Authenticator Authenticator[]

  // Basic info
  firstName      String?
  lastName       String?
  email          String?     @unique
  phonePrimary   String?
  role           UserRole    @default(USER)
}



///////////////////////////////////////////
// -------- RELATIONSHIP MODELS -------- //
///////////////////////////////////////////

// model ModelLink {
//   id        String   @id @default(uuid())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   sourceId   String
//   sourceType ModelType
//   targetId   String
//   targetType ModelType

//   key   String?
//   value String?

//   @@unique([sourceId, sourceType, targetId, targetType])
//   @@index([sourceId, sourceType])
//   @@index([targetId, targetType])
// }

